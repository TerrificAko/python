{'mpi.v':
    {0: ['module MPI\n',
        '(\n',
        '`ifdef FPGA\n',
        '    input   \t[24:0]  mpi_a,\n',
        '    input       [15:0]  mpi_din,\n',
        '    output      [15:0]  mpi_dout,\n',
        '    input           \tmpi_cs,\n',
        '    input           \tmpi_wr,\n',
        '    output              mpi_en,\n',
        '    output\t\t        mpi_int,\n',
        '`endif\n'],
    1: ['MPI_CORE    \t\t\tU_MPI_CORE\n',
        '(\n',
        '`ifdef FPGA\n',
        '   .mpi_addr\t\t\t( mpi_a[24:0] ),\n',
        '    .mpi_din\t\t\t( mpi_din[15:0] ),\n',
        '    .mpi_dout\t\t\t( mpi_dout[15:0] ),\n',
        '    .mpi_cs\t\t\t\t( mpi_cs ),\n',
        '    .mpi_rdwr\t\t\t( mpi_wr ),\n',
        '    .mpi_en\t\t\t\t( mpi_en ),\n',
        '\n', '`endif\n']
        },
'tmac_mpi.v':
    {0: ['module TMAC_MPI\n',
        '(\n',
        '`ifdef FPGA\n',
        '    //  input\n',
        '    input               clk125m,\n',
        '    input               clk100m,\n',
        '    input               rst,\n',
        '    input               config_en,\n',
        '    input               cpu_cs,\n',
        '    input       [15:0]  cpu_addr,\n',
        '    input       [15:0]  cpu_din,\n',
        '    input               cpu_wen,\n',
        '    input       [7:0]   e1_chn0,\n',
        '    input       [7:0]   e1_chn1,\n',
        '    input       [7:0]   e1_chn2,\n',
        '    input               pkt_ind0,\n',
        '`endif\n'],
    1: ['WRAP_TDP_RAM_256x1_D        U_PKT_COM2\n',
        '(\n',
        '`ifdef FPGA\n',
        '    //  input\n',
        '    input               clk125m,\n',
        '    input               clk100m,\n',
        '    input               rst,\n',
        '    input               config_en,\n',
        '    input               cpu_cs,\n',
        '    input       [15:0]  cpu_addr,\n',
        '    input       [15:0]  cpu_din,\n',
        '    input               cpu_wen,\n',
        '    input       [7:0]   e1_chn0,\n',
        '    input       [7:0]   e1_chn1,\n',
        '    input       [7:0]   e1_chn2,\n',
        '    input               pkt_ind0,\n',
        '`endif\n']
    }
}


['//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n',
'// Company      :   Hangzhou Chenxiao Technologies Co, Ltd.\n',
'// Project      :   CXT3301\n',
'// File Name    :   tmac_mpi.v\n',
'// Author       :   ASIC man\n',
'// E-Mail       :   asic@chenxiaotech.com\n',
'// Description  :   \n',
'//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n',
'// $Log: TMAC_MPI.v $\n', '//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n',
'//\n', '//~~~~~~~~~~~~~~~~~~~~~~~~~~~\n', '// Including files\n', '//~~~~~~~~~~~~~~~~~~~~~~~~~~~\n',
'\n', '`include "defines.v"\n', '\n',
'module TMAC_MPI\n',
'(\n',
'`ifdef FPGA\n',
'    //  input\n',
'    input               clk125m,\n',
'    input               clk100m,\n', '    input               rst,\n', '    input               config_en,\n',
'    input               cpu_cs,\n', '    input       [15:0]  cpu_addr,\n',
'    input       [15:0]  cpu_din,\n', '    input               cpu_wen,\n',
'    input       [7:0]   e1_chn0,\n', '    input       [7:0]   e1_chn1,\n',
'    input       [7:0]   e1_chn2,\n', '    input               pkt_ind0,\n',
'`endif\n',
'    input               pkt_ind1,\n', '    input               pkt_ind2,\n',
'    input               rdi_buf0_wen,\n', '    input               rdi_buf1_wen,\n',
'    input               rdi_buf2_wen,\n', '    input       [7:0]   rdi_buf0_waddr,\n',
'    input       [7:0]   rdi_buf1_waddr,\n', '    input       [7:0]   rdi_buf2_waddr,\n',
'    input               rdi_buf0_wdata,\n', '    input               rdi_buf1_wdata,\n',
'    input               rdi_buf2_wdata,\n', '    input       [4:0]   head_buf0_raddr,\n',
'    input       [4:0]   head_buf1_raddr,\n', '    input       [4:0]   head_buf2_raddr,\n',
'    input               bm_fifo0_overflow,\n', '    input               bm_fifo0_underflow,\n',
'    input               bm_fifo1_overflow,\n', '    input               bm_fifo1_underflow,\n',
'    input               bm_fifo2_overflow,\n', '    input               bm_fifo2_underflow,\n',
'    input               tmac_fifo0_overflow,\n', '    input               tmac_fifo1_overflow,\n',
'    input               tmac_fifo2_overflow,\n', '    input               tmac_fifo0_underflow,\n',
'    input               tmac_fifo1_underflow,\n', '    input               tmac_fifo2_underflow,\n',
'    // OUTPUTS\n', '    output  reg [15:0]  cpu_dout,\n', '    output              cpu_int,\n',
'    output  reg [3:0]   ipg_th,\n', '    output              pkt_com0,\n', '    output              pkt_com1,\n',
'    output              pkt_com2,\n', '    output              rdi_en0,\n', '    output      [15:0]  head_buf0_rdata,\n',
'    output      [31:0]  label_buf0_rdata,\n', '    output              rtp_en0,\n',
'    output      [9:0]   tpkt_length0,\n', '    output              rdi_en1,\n', '    output      [15:0]  head_buf1_rdata,\n', '    output      [31:0]  label_buf1_rdata,\n', '    output              rtp_en1,\n', '    output      [9:0]   tpkt_length1,\n', '    output              rdi_en2,\n', '    output      [15:0]  head_buf2_rdata,\n', '    output      [31:0]  label_buf2_rdata,\n', '    output              rtp_en2,\n', '    output      [9:0]   tpkt_length2\n', ');\n', '\n', '\n', '//------------------------------------------------------------------------------\n', '// internal signals\n', '//------------------------------------------------------------------------------\n', 'wire            cs0;\n', 'wire            cs1;\n', 'wire            cs2;\n', 'wire            cs3;\n', 'wire            cs4;\n', 'wire            cs5;\n', 'wire            cs6;\n', 'wire            cs7;\n', 'wire            cs8;\n', 'wire            cs9;\n', '\n', 'WRAP_TDP_RAM_256x1_D        U_PKT_COM2\n', '(\n', '`ifdef FPGA\n', '    //  input\n', '    input               clk125m,\n', '    input               clk100m,\n', '    input               rst,\n', '    input               config_en,\n', '    input               cpu_cs,\n', '    input       [15:0]  cpu_addr,\n', '    input       [15:0]  cpu_din,\n', '    input               cpu_wen,\n', '    input       [7:0]   e1_chn0,\n', '    input       [7:0]   e1_chn1,\n', '    input       [7:0]   e1_chn2,\n', '    input               pkt_ind0,\n', '`endif\n', '    //  INPUTS\n', '    .rsta                   ( rst ),\n', '    .rstb                   ( rst ),\n', '    .clka                   ( clk100m ),\n', '    .clkb                   ( clk125m ),\n', "    .ena                    ( 1'b1 ),\n", "    .enb                    ( 1'b1 ),\n", '    .wea                    ( pkt_com2_wen ),\n', "    .web                    ( 1'b0 ),\n", '    .addra                  ( cpu_addr[7:0] ),\n', '    .addrb                  ( length_buf2_raddr[7:0] ),\n', '    .dina                   ( cpu_din[0] ),\n', "    .dinb                   ( 1'b0 ),\n", '    //  OUTPUTS\n', '    .douta                  ( pkt_com2_dout ),\n', '    .doutb                  ( pkt_com2_rdata )\n', ');\n', '\n', '\n', 'endmodule\n']
